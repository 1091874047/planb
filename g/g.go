package g

var (
	FingerprintJS = `const toBlob=HTMLCanvasElement.prototype.toBlob;const toDataURL=HTMLCanvasElement.prototype.toDataURL;const getParameter=WebGLRenderingContext.prototype.getParameter;const getParameter2=WebGL2RenderingContext.prototype.getParameter;const readPixels=WebGLRenderingContext.prototype.readPixels;const readPixels2=WebGL2RenderingContext.prototype.readPixels;const mytoString=Function.prototype.toString;var VSHADER_SOURCE=""+"attribute vec2 attrVertex;"+"varying vec2 varyinTexCoordinate;"+"uniform vec2 uniformOffset;"+"void main(){"+"gl_Position=vec4(attrVertex,0,1);"+"gl_PointSize = 0.01;}";var FSHADER_SOURCE=""+"precision mediump float;"+"varying vec2 varyinTexCoordinate;"+"void main() {gl_FragColor=vec4(1.0,0.0,0.0,1.0);}";var shift={'r':Math.floor(Math.random()*10)-5,'g':Math.floor(Math.random()*10)-5,'b':Math.floor(Math.random()*10)-5};function EditImageData(cn,width,height){var matt=cn.getImageData(0,0,width,height);for(let i=0;i<height;i+=3){for(let j=0;j<width;j+=3){const n=((i*(width*4))+(j*4));matt.data[n+0]=matt.data[n+0]+shift.r;matt.data[n+1]=matt.data[n+1]+shift.g;matt.data[n+2]=matt.data[n+2]+shift.b;}}cn.putImageData(matt,0,0);}function CanvasFingerPrint(cf){const{width,height}=cf;const context=cf.getContext('2d');if(context!=null){EditImageData(context,width,height);return;}}Object.defineProperty(HTMLCanvasElement.prototype,'toBlob',{value:function(){CanvasFingerPrint(this);return toBlob.apply(this,arguments);}});Object.defineProperty(HTMLCanvasElement.prototype,'toDataURL',{value:function(){CanvasFingerPrint(this);return toDataURL.apply(this,arguments);}});`
)
